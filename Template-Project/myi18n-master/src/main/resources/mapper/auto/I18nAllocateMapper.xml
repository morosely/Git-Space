<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.myi18n.dao.I18nAllocateMapper" >
  <resultMap id="BaseResultMap" type="com.example.myi18n.entity.I18nAllocate" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="label" property="label" jdbcType="VARCHAR" />
    <result column="langs" property="langs" jdbcType="OTHER" />
    <result column="to_web" property="toWeb" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, type, module, label, langs, to_web
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.myi18n.entity.example.I18nAllocateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_i18n_allocate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_i18n_allocate
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_i18n_allocate
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.myi18n.entity.example.I18nAllocateExample" >
    delete from t_i18n_allocate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.myi18n.entity.I18nAllocate" >
    insert into t_i18n_allocate (pid, type, module,
      label, langs, to_web)
    values (#{pid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{module,jdbcType=VARCHAR}, 
      #{label,jdbcType=VARCHAR}, #{langs,jdbcType=OTHER}, #{toWeb,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.myi18n.entity.I18nAllocate" >
    insert into t_i18n_allocate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="label != null" >
        label,
      </if>
      <if test="langs != null" >
        langs,
      </if>
      <if test="toWeb != null" >
        to_web,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="langs != null" >
        #{langs,jdbcType=OTHER},
      </if>
      <if test="toWeb != null" >
        #{toWeb,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.myi18n.entity.example.I18nAllocateExample" resultType="java.lang.Integer" >
    select count(*) from t_i18n_allocate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_i18n_allocate
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.module != null" >
        module = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null" >
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.langs != null" >
        langs = #{record.langs,jdbcType=OTHER},
      </if>
      <if test="record.toWeb != null" >
        to_web = #{record.toWeb,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_i18n_allocate
    set pid = #{record.pid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      module = #{record.module,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      langs = #{record.langs,jdbcType=OTHER},
      to_web = #{record.toWeb,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.myi18n.entity.I18nAllocate" >
    update t_i18n_allocate
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="langs != null" >
        langs = #{langs,jdbcType=OTHER},
      </if>
      <if test="toWeb != null" >
        to_web = #{toWeb,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.myi18n.entity.I18nAllocate" >
    update t_i18n_allocate
    set type = #{type,jdbcType=VARCHAR},
      module = #{module,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      langs = #{langs,jdbcType=OTHER},
      to_web = #{toWeb,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>

  <select id="buildLangToJava" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from t_i18n_allocate
    where type = 'Java' and to_web = 0
  </select>



</mapper>